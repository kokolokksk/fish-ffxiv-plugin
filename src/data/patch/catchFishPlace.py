#encoding:utf-8
import requests
import bs4
import json
import time
import random
import json
import numpy as np
import re
# list 转成Json格式数据
def listToJson(lst):
    
    keys = [str(x) for x in np.arange(len(lst))]
    list_json = dict(zip(keys, lst))
    str_json = json.dumps(list_json, indent=2, ensure_ascii=False)  # json转为string
    return str_json
def dicToJson(raw):
    str_json = json.dumps(raw)
    return str_json
#user_agent 集合
USER_AGENTS = [
    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; AcooBrowser; .NET CLR 1.1.4322; .NET CLR 2.0.50727)",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; Acoo Browser; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506)",
    "Mozilla/4.0 (compatible; MSIE 7.0; AOL 9.5; AOLBuild 4337.35; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)",
    "Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US)",
    "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0)",
    "Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 1.0.3705; .NET CLR 1.1.4322)",
    "Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 5.2; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 3.0.04506.30)",
    "Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN) AppleWebKit/523.15 (KHTML, like Gecko, Safari/419.3) Arora/0.3 (Change: 287 c9dfb30)",
    "Mozilla/5.0 (X11; U; Linux; en-US) AppleWebKit/527+ (KHTML, like Gecko, Safari/419.3) Arora/0.6",
    "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.2pre) Gecko/20070215 K-Ninja/2.1.1",
    "Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9) Gecko/20080705 Firefox/3.0 Kapiko/3.0",
    "Mozilla/5.0 (X11; Linux i686; U;) Gecko/20070322 Kazehakase/0.4.5",
    "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko Fedora/1.9.0.8-1.fc10 Kazehakase/0.5.6",
    "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.20 (KHTML, like Gecko) Chrome/19.0.1036.7 Safari/535.20",
    "Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; fr) Presto/2.9.168 Version/11.52",
]
headers={'User-Agent':random.choice(USER_AGENTS)}
fishData = [
    "1",
    "4",
    "5",
    "8",
    "12",
    "14",
    "15",
    "18",
    "20",
    "22",
    "26",
    "30",
    "32",
    "35",
    "38",
    "40",
    "43",
    "49",
    "54",
    "58",
    "61",
    "62",
    "65",
    "67",
    "70",
    "72",
    "75",
    "77",
    "81",
    "83",
    "85",
    "88",
    "93",
    "97",
    "116",
    "117",
    "124",
    "129",
    "133",
    "138",
    "143",
    "149",
    "152",
    "155",
    "156",
    "159",
    "160",
    "165",
    "166",
    "169",
    "170",
    "171",
    "172",
    "179",
    "180",
    "2",
    "3",
    "6",
    "7",
    "9",
    "11",
    "13",
    "16",
    "17",
    "19",
    "21",
    "23",
    "25",
    "27",
    "28",
    "29",
    "31",
    "33",
    "34",
    "36",
    "37",
    "39",
    "41",
    "42",
    "44",
    "46",
    "48",
    "50",
    "51",
    "52",
    "53",
    "55",
    "56",
    "59",
    "60",
    "63",
    "66",
    "68",
    "69",
    "71",
    "73",
    "76",
    "78",
    "79",
    "80",
    "82",
    "84",
    "87",
    "89",
    "90",
    "91",
    "94",
    "95",
    "98",
    "99",
    "101",
    "103",
    "104",
    "105",
    "108",
    "109",
    "112",
    "114",
    "115",
    "118",
    "119",
    "121",
    "122",
    "123",
    "125",
    "127",
    "128",
    "130",
    "131",
    "135",
    "136",
    "139",
    "140",
    "141",
    "145",
    "146",
    "150",
    "151",
    "153",
    "154",
    "157",
    "158",
    "161",
    "162",
    "163",
    "167",
    "173",
    "174",
    "175",
    "176",
    "177",
    "178",
    "181",
    "182",
    "183",
    "184",
    "92",
    "96",
    "100",
    "102",
    "106",
    "110",
    "126",
    "132",
    "134",
    "137",
    "142",
    "147",
    "148",
    "164",
    "168",
    "10",
    "57",
    "107",
    "120",
    "74",
    "185",
    "186",
    "201",
    "202",
    "203",
    "204",
    "205",
    "206",
    "207",
    "208",
    "209",
    "210",
    "211",
    "212",
    "213",
    "214",
    "215",
    "216",
    "217",
    "218",
    "219",
    "220",
    "221",
    "222",
    "223",
    "224",
    "225",
    "226",
    "227",
    "228",
    "229",
    "230",
    "231",
    "232",
    "233",
    "234",
    "235",
    "236",
    "237",
    "238",
    "239",
    "240",
    "241",
    "242",
    "243",
    "244",
    "245",
    "246",
    "247",
    "248",
    "249",
    "250",
    "251",
    "252",
    "253",
    "254",
    "255",
    "256",
    "257",
    "258",
    "259",
    "260",
    "261",
    "262",
    "263",
    "264",
    "265",
    "266",
    "267",
    "268",
    "269",
    "270",
    "271",
    "272",
    "273",
    "274",
    "275",
    "276",
    "277",
    "278",
    "279",
    "280",
    "281",
    "282",
    "283",
    "284",
    "285",
    "286",
    "287",
    "288",
    "289",
    "290",
    "291",
    "292",
    "293",
    "294",
    "295",
    "296",
    "297",
    "298",
    "299",
    "300",
    "301",
    "302",
    "303",
    "304",
    "305",
    "306",
    "307",
    "308",
    "309",
    "310",
    "311",
    "312",
    "313",
    "314",
    "315",
    "316",
    "317",
    "318",
    "319",
    "320",
    "321",
    "322",
    "323",
    "324",
    "325",
    "326",
    "327",
    "328",
    "329",
    "330",
    "331",
    "332",
    "333",
    "334",
    "335",
    "336",
    "337",
    "338",
    "339",
    "340",
    "341",
    "342",
    "343",
    "344",
    "345",
    "346",
    "347",
    "348",
    "349",
    "350",
    "351",
    "352",
    "353",
    "355",
    "356",
    "357",
    "358",
    "359",
    "360",
    "361",
    "362",
    "363",
    "364",
    "365",
    "366",
    "367",
    "368",
    "369",
    "370",
    "371",
    "372",
    "373",
    "374",
    "375",
    "376",
    "377",
    "378",
    "379",
    "380",
    "381",
    "382",
    "383",
    "384",
    "385",
    "386",
    "388",
    "389",
    "390",
    "391",
    "392",
    "393",
    "394",
    "395",
    "396",
    "397",
    "398",
    "399",
    "400",
    "401",
    "403",
    "404",
    "405",
    "406",
    "407",
    "408",
    "409",
    "410",
    "411",
    "412",
    "413",
    "414",
    "415",
    "416",
    "417",
    "418",
    "419",
    "420",
    "421",
    "422",
    "423",
    "424",
    "425",
    "426",
    "427",
    "428",
    "429",
    "430",
    "431",
    "432",
    "433",
    "434",
    "435",
    "436",
    "437",
    "438",
    "439",
    "440",
    "441",
    "442",
    "443",
    "451",
    "452",
    "453",
    "454",
    "455",
    "456",
    "457",
    "458",
    "459",
    "460",
    "461",
    "462",
    "463",
    "464",
    "465",
    "466",
    "467",
    "468",
    "469",
    "470",
    "471",
    "472",
    "473",
    "474",
    "475",
    "476",
    "477",
    "478",
    "479",
    "480",
    "481",
    "482",
    "483",
    "484",
    "485",
    "486",
    "487",
    "488",
    "506",
    "507",
    "508",
    "509",
    "510",
    "489",
    "490",
    "491",
    "492",
    "493",
    "494",
    "495",
    "496",
    "497",
    "498",
    "499",
    "500",
    "501",
    "502",
    "503",
    "504",
    "505",
    "618",
    "619",
    "572",
    "620",
    "621",
    "573",
    "622",
    "608",
    "512",
    "592",
    "593",
    "513",
    "623",
    "582",
    "563",
    "528",
    "609",
    "624",
    "546",
    "610",
    "611",
    "625",
    "626",
    "514",
    "627",
    "594",
    "515",
    "564",
    "529",
    "628",
    "516",
    "547",
    "629",
    "598",
    "599",
    "630",
    "517",
    "531",
    "533",
    "548",
    "566",
    "519",
    "534",
    "520",
    "521",
    "549",
    "550",
    "567",
    "551",
    "522",
    "552",
    "523",
    "612",
    "631",
    "613",
    "600",
    "601",
    "614",
    "602",
    "583",
    "553",
    "524",
    "525",
    "535",
    "536",
    "537",
    "526",
    "568",
    "554",
    "527",
    "538",
    "539",
    "540",
    "541",
    "542",
    "543",
    "544",
    "555",
    "556",
    "632",
    "557",
    "558",
    "634",
    "603",
    "604",
    "559",
    "560",
    "561",
    "615",
    "605",
    "575",
    "545",
    "562",
    "606",
    "595",
    "596",
    "597",
    "569",
    "616",
    "570",
    "633",
    "617",
    "571",
    "584",
    "585",
    "577",
    "578",
    "586",
    "579",
    "587",
    "588",
    "589",
    "590",
    "530",
    "565",
    "581",
    "591",
    "607",
    "635",
    "637",
    "638",
    "639",
    "640",
    "641",
    "642",
    "643",
    "644",
    "645",
    "646",
    "647",
    "648",
    "649",
    "650",
    "651",
    "652",
    "653",
    "654",
    "655",
    "656",
    "657",
    "658",
    "659",
    "660",
    "661",
    "662",
    "663",
    "664",
    "665",
    "666",
    "667",
    "668",
    "669",
    "670",
    "671",
    "672",
    "673",
    "674",
    "675",
    "676",
    "677",
    "678",
    "679",
    "680",
    "681",
    "682",
    "683",
    "684",
    "685",
    "686",
    "687",
    "688",
    "689",
    "690",
    "691",
    "692",
    "693",
    "694",
    "695",
    "696",
    "697",
    "698",
    "699",
    "700",
    "701",
    "702",
    "703",
    "704",
    "705",
    "706",
    "707",
    "708",
    "709",
    "710",
    "711",
    "712",
    "713",
    "714",
    "715",
    "716",
    "717",
    "718",
    "719",
    "720",
    "721",
    "722",
    "723",
    "724",
    "725",
    "726",
    "727",
    "728",
    "729",
    "730",
    "731",
    "732",
    "733",
    "636",
    "734",
    "742",
    "743",
    "744",
    "745",
    "746",
    "735",
    "736",
    "737",
    "738",
    "739",
    "740",
    "741",
    "747",
    "748",
    "749",
    "750",
    "751",
    "752",
    "753",
    "754",
    "755",
    "756",
    "757",
    "758",
    "759",
    "760",
    "761",
    "762",
    "763",
    "764",
    "765",
    "766",
    "767",
    "768",
    "769",
    "770",
    "771",
    "772",
    "773",
    "774",
    "775",
    "776",
    "777",
    "778",
    "806",
    "807",
    "808",
    "809",
    "810",
    "811",
    "812",
    "813",
    "814",
    "815",
    "816",
    "817",
    "818",
    "819",
    "820",
    "821",
    "835",
    "836",
    "837",
    "838",
    "839",
    "822",
    "823",
    "824",
    "825",
    "826",
    "827",
    "828",
    "829",
    "830",
    "831",
    "832",
    "833",
    "834",
    "840",
    "841",
    "842",
    "843",
    "844",
    "845",
    "3001",
    "3002",
    "3003",
    "3004",
    "3007",
    "3008",
    "3009",
    "3010",
    "3011",
    "3012",
    "3013",
    "3014",
    "3015",
    "3016",
    "3017",
    "3018",
    "3019",
    "3020",
    "3021",
    "3022",
    "3023",
    "3024",
    "3025",
    "3026",
    "3027",
    "3028",
    "3029",
    "3030",
    "3031",
    "3032",
    "3033",
    "3034",
    "3035",
    "3036",
    "3037",
    "3038",
    "3039",
    "3040",
    "3041",
    "3042",
    "3043",
    "3044",
    "3045",
    "3046",
    "3047",
    "3048",
    "3049",
    "3050",
    "3051",
    "3052",
    "3053",
    "3054",
    "3055",
    "3056",
    "3057",
    "3058",
    "3059",
    "3060",
    "3061",
    "3062",
    "3063",
    "3064",
    "3065",
    "3066",
    "3067",
    "3068",
    "3069",
    "3070",
    "3071",
    "3072",
    "3073",
    "3074",
    "3075",
    "3076",
    "3077",
    "3078",
    "3079",
    "3080",
    "3081",
    "3082",
    "3083",
    "3084",
    "3085",
    "3086",
    "3087",
    "3088",
    "3089",
    "3090",
    "3091",
    "3092",
    "3093",
    "3094",
    "3095",
    "3096",
    "3097",
    "3098",
    "3099",
    "3100",
    "3101",
    "3102",
    "3103",
    "3104",
    "3105",
    "3106",
    "3107",
    "3108",
    "3109",
    "3110",
    "3111",
    "3112",
    "3113",
    "3114",
    "3115",
    "3116",
    "3117",
    "3118",
    "3119",
    "3120",
    "3121",
    "3122",
    "3123",
    "3124",
    "3125",
    "3126",
    "3127",
    "3128",
    "3129",
    "3130",
    "3131",
    "3132",
    "3133",
    "3134",
    "3135",
    "3136",
    "3137",
    "3138",
    "3139",
    "3140",
    "3141",
    "3142",
    "3143",
    "3144",
    "3145",
    "3146",
    "3147",
    "3148",
    "3149",
    "3150",
    "3151",
    "3152",
    "3153",
    "3154",
    "3155",
    "3156",
    "3157",
    "3158",
    "3159",
    "3160",
    "3161",
    "3162",
    "3163",
    "3164",
    "3165",
    "3166",
    "3167",
    "3168",
    "3169",
    "3170",
    "3171",
    "3172",
    "3173",
    "3174",
    "3175",
    "3176",
    "3177",
    "3178",
    "3179",
    "3180",
    "3181",
    "3182",
    "3183",
    "3184",
    "3185",
    "3186",
    "3187",
    "3188",
    "3189",
    "3190",
    "3191",
    "3192",
    "3193",
    "3194",
    "3195",
    "3196",
    "3197",
    "3198",
    "3299",
    "3300",
    "3301",
    "3302",
    "3303",
    "3304",
    "3305",
    "3306",
    "3307",
    "3308",
    "3310",
    "3311",
    "3312",
    "3313",
    "3314",
    "3315",
    "3309",
    "3342",
    "3343",
    "3436",
    "3437",
    "3344",
    "3345",
    "3346",
    "3347",
    "3348",
    "3349",
    "3449",
    "3450",
    "3451",
    "3452",
    "3453",
    "3454",
    "3455",
    "3456",
    "3457",
    "3458",
    "3459",
    "3438",
    "3439",
    "3440",
    "3441",
    "3442",
    "3443",
    "3444",
    "3445",
    "3446",
    "3447",
    "3448",
    "3640",
    "3641",
    "3642",
    "3643",
    "3460",
    "3461",
    "3462",
    "3463",
    "3464",
    "3465",
    "3466",
    "3467",
    "3468",
    "3469",
    "3470",
    "3471",
    "3472",
    "3473",
    "3474",
    "3475",
    "3476",
    "3477",
    "3478",
    "3479",
    "3480",
    "3481",
    "3482",
    "3483",
    "3484",
    "3485",
    "3486",
    "3487",
    "3488",
    "3489",
    "3490",
    "3491",
    "3492",
    "3493",
    "3494",
    "3495",
    "3496",
    "3497",
    "3498",
    "3499",
    "3500",
    "3501",
    "3502",
    "3503",
    "3504",
    "3505",
    "3506",
    "3507",
    "3508",
    "3509",
    "3510",
    "3511",
    "3512",
    "3513",
    "3514",
    "3515",
    "3516",
    "3517",
    "3518",
    "3519",
    "3520",
    "3521",
    "3522",
    "3523",
    "3524",
    "3525",
    "3526",
    "3527",
    "3528",
    "3529",
    "3530",
    "3531",
    "3532",
    "3533",
    "3534",
    "3535",
    "3536",
    "3537",
    "3538",
    "3539",
    "3540",
    "3541",
    "3542",
    "3543",
    "3544",
    "3545",
    "3546",
    "3547",
    "3548",
    "3549",
    "3550",
    "3551",
    "3552",
    "3553",
    "3554",
    "3555",
    "3556",
    "3557",
    "3558",
    "3559",
    "3560",
    "3561",
    "3562",
    "3563",
    "3564",
    "3565",
    "3566",
    "3567",
    "3568",
    "3569",
    "3570",
    "3571",
    "3572",
    "3573",
    "3574",
    "3575",
    "3576",
    "3577",
    "3578",
    "3579",
    "3580",
    "3581",
    "3582",
    "3583",
    "3584",
    "3585",
    "3586",
    "3587",
    "3588",
    "3589",
    "3590",
    "3591",
    "3592",
    "3593",
    "3594",
    "3595",
    "3596",
    "3597",
    "3598",
    "3599",
    "3600",
    "3601",
    "3602",
    "3603",
    "3604",
    "3605",
    "3606",
    "3607",
    "3608",
    "3609",
    "3610",
    "3611",
    "3612",
    "3613",
    "3614",
    "3615",
    "3616",
    "3617",
    "3618",
    "3619",
    "3620",
    "3621",
    "3622",
    "3623",
    "3624",
    "3625",
    "3626",
    "3627",
    "3628",
    "3629",
    "3630",
    "3631",
    "3632",
    "3633",
    "3634",
    "3635",
    "3636",
    "3637",
    "3638",
    "3639",
    "47",
    "86",
    "47",
    "64",
    "144",
    "24",
    "144",
    "45",
    "111",
    "47",
    "45",
    "111",
    "86",
    "113",
    "113",
    "64",
    "24",
    "402",
    "354",
    "387",
    "354",
    "387",
    "402",
    "574",
    "576",
    "580",
    "576",
    "580",
    "532",
    "518",
    "532",
    "518",
    "574"
]
url = 'https://cn.ff14angler.com/fish/'
i = 1
x = 410
# con = sqlite3.connect('./lalafell.db')

def parseAndSave(rc,i,f):
  ic = rc.find_all(attrs={'name':'spot_delete'})
  if len(ic) == 0:
      f.write('"'+str(i)+'":{')
  for item in ic:
    table = item.find(class_='info_section list')
    area = table.find_all(class_='area')
    mapDc = '"fishSpotCN":['
    mapF =  '"locationsCN":['
    cns = ""
    cnSpot = ""
    spots = table.find_all('a')
    for spot in spots:
        href_value = spot.get('href')
        if href_value is not None :
            if href_value.find('spot') != -1:
                cnSpot += ',"'+spot.text+'"'
    cnSpot = cnSpot[1:]
    for a in area:
        print(a.text)
        cns += ',"'+a.text+'"'
    cns = cns[1:]
    mapF += cns + '],'
    mapDc += cnSpot + '],'
    f.write('"'+str(i)+'":{'+mapF)
    f.write('\n')
    f.write(mapDc)
    f.write('\n')
#   timeline = rc.find(class_='tz_bar')
#   if timeline is not None:
#     fishtime = set()
#     for ti in timeline:
#       ti.find_next_sibling('label')  
#       fishtime.add(int(ti.text))
#     f.write('"fishTime":['+','.join(map(str, fishtime))+'],')
#     f.write('\n')
  fishName = rc.find(class_='name')
  if fishName is None:
        return
  f.write('"fishName":{"cn":"'+fishName.text+'"},')
  b = rc.find_all(class_='bait')
  f.write('"bait":[')
  if len(b) != 0:
    for alabel in b:
      f.write('"'+alabel.text+'",')
  else:
    btable = rc.find(attrs={'name':'bait_delete'})
    matches = re.findall(r'\b([A-Z])\b', btable.text)
    # 格式化结果为字符串
    result_string = ",".join(matches)
    f.write('"'+result_string+'",')         
  f.write('],')
  f.write('\n')
  f.write('},')

def getData(i,url,USER_AGENTS,f):
    print(i)
    urln = url + str(i)
    #print(urln)
    headers={'User-Agent':random.choice(USER_AGENTS)}
    try:
        response = requests.get(urln,headers=headers)
    except ConnectionError:
       print("connectionError:"+urln)
       getData(i,url,USER_AGENTS)
    else:
        status_code = response.status_code
        content = bs4.BeautifulSoup(response.content.decode("utf-8"),"lxml")
        if(status_code == 404): 
            print('404_')
        else:
            try:
                # todo
                parseAndSave(content,i,f)
            except AttributeError:
               print("AttributeError")
               getData(i,url,USER_AGENTS,f)
           
#while i<=x:#x:#1132
with open('./fishDataFull.json','w',encoding='utf-8') as f:
    f.write('{')
    fishData = list(range(209, 3780))
    for fish_id in fishData:
        try:
            getData(fish_id,url,USER_AGENTS,f)
            f.flush()
            sleepTime = random.randint(1, 3)
            time.sleep(sleepTime)
        except Exception as e:
            continue
            getData(fish_id,url,USER_AGENTS,f)
        else:
            i = i + 1
    f.write('}')
    f.close()
 